name: Build with Gradle

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        type: string
        description: New version for the release. When empty release publishing skipped.
        default: ''
        required: true
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
    runs-on: ${{ matrix.os }}
    permissions:
      actions: write
      contents: read

    steps:
      - name: Change Gradle user home
        shell: bash
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |
          GRADLE_USER_HOME=${RUNNER_TEMP}\.gradle
          mkdir -p "${GRADLE_USER_HOME}"
          echo "GRADLE_USER_HOME=${GRADLE_USER_HOME}" >> ${GITHUB_ENV}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version-file: '.java-version'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v4.4.0
      - name: Bump version
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.releaseVersion != ''
        run: |
          ./bumpVersion.sh "${RELEASE_VERSION}"
        env:
          RELEASE_VERSION: ${{ github.event.inputs.releaseVersion }}
      - name: Publish Gradle Plugin to Maven Local
        run: |
          ./gradlew :robolectric-extension-gradle-plugin:publishToMavenLocal --configure-on-demand
        env:
          JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_KEY: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_KEY }}'
          JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_PASSWORD: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_PASSWORD }}'
      - name: Build with Gradle Wrapper
        run: |
          ./gradlew build koverXmlReport publish
        env:
          JUNIT5_ROBOLECTRIC_EXTENSION_MAVEN_USERNAME: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_MAVEN_USERNAME }}'
          JUNIT5_ROBOLECTRIC_EXTENSION_MAVEN_PASSWORD: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_MAVEN_PASSWORD }}'
          JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_KEY: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_KEY }}'
          JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_PASSWORD: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_PASSWORD }}'
      - name: Publish Gradle Plugin
        run: |
          ./publishGradlePlugin.sh
        env:
          JUNIT5_ROBOLECTRIC_EXTENSION_GRADLE_PLUGIN_PORTAL_KEY: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_GRADLE_PLUGIN_PORTAL_KEY }}'
          JUNIT5_ROBOLECTRIC_EXTENSION_GRADLE_PLUGIN_PORTAL_SECRET: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_GRADLE_PLUGIN_PORTAL_SECRET }}'
          JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_KEY: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_KEY }}'
          JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_PASSWORD: '${{ secrets.JUNIT5_ROBOLECTRIC_EXTENSION_GPG_SIGNING_PASSWORD }}'
      - name: Upload unit test report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ always() && hashFiles('**/test-results/**/*.xml') != '' }}
        with:
          name: ${{ matrix.os }}-unit-test-report
          path: |
            ${{ github.workspace }}/**/build/reports/tests
            ${{ github.workspace }}/**/build/test-results
          retention-days: 5
      - name: Upload coverage report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ always() && hashFiles('build/reports/kover/report.xml') != '' }}
        with:
          name: ${{ matrix.os }}-kover-report
          path: ${{ github.workspace }}/build/reports/kover/report.xml
          retention-days: 5
  release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    needs:
      - build
    if: github.ref_name == github.event.repository.default_branch && github.event_name == 'workflow_dispatch' && github.event.inputs.releaseVersion != '' && !endsWith(github.event.inputs.releaseVersion, 'SNAPSHOT')
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.head_ref }}
      - name: Create release
        shell: bash
        run: |
          git config --global user.name "${GIT_USER_NAME}"
          git config --global user.email "${GIT_USER_EMAIL}"
          ./tagRelease.sh "${RELEASE_VERSION}"
        env:
          GIT_USER_NAME: ${{ github.actor }}
          GIT_USER_EMAIL: ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com
          RELEASE_VERSION: ${{ github.event.inputs.releaseVersion }}
  junit:
    strategy:
      matrix:
        os: [ ubuntu-24.04, windows-2025 ]
    runs-on: ${{ matrix.os }}
    needs:
      - build
    permissions:
      actions: read
      checks: write
      contents: read
    if: github.repository == 'apter-tech/junit5-robolectric-extension' && github.event_name == 'pull_request'
    steps:
      - name: Download unit test report
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ matrix.os }}-unit-test-report
      - name: Comment unit test report
        if: ${{ hashFiles('**/test-results/**/*.xml') != '' }}
        uses: mikepenz/action-junit-report@cf701569b05ccdd861a76b8607a66d76f6fd4857 # v5.5.1
        with:
          report_paths: '**/test-results/**/*.xml'
          check_name: Unit test report (${{ matrix.os }})
  kover:
    strategy:
      matrix:
        os: [ ubuntu-24.04, windows-2025 ]
    runs-on: ${{ matrix.os }}
    needs:
      - build
    permissions:
      actions: read
      checks: write
      contents: read
      pull-requests: write
    if: github.repository == 'apter-tech/junit5-robolectric-extension' && github.event_name == 'pull_request'
    steps:
      - name: Download coverage report
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ matrix.os }}-kover-report
      - name: Comment branch coverage report to PR
        uses: mi-kas/kover-report@5f58465b6f395c8fa3adc2665e27250bad87de50 # v1.9
        if: ${{ hashFiles('report.xml') != '' }}
        with:
          path: ${{ github.workspace }}/report.xml
          title: Branch Coverage (${{ matrix.os }})
          update-comment: true
          min-coverage-overall: 60
          min-coverage-changed-files: 70
          coverage-counter-type: BRANCH
      - name: Comment line coverage report to PR (${{ matrix.os }})
        uses: mi-kas/kover-report@5f58465b6f395c8fa3adc2665e27250bad87de50 # v1.9
        if: ${{ hashFiles('report.xml') != '' }}
        with:
          path: ${{ github.workspace }}/report.xml
          title: Line Coverage (${{ matrix.os }})
          update-comment: true
          min-coverage-overall: 60
          min-coverage-changed-files: 70
          coverage-counter-type: LINE
